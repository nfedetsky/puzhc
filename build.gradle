plugins {
    id 'io.jmix' version '1.2.0'
    id 'java'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.2.1'
}

group = 'com.softline'
version = '0.4.13-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
        url "$rootDir/jmix-repository"
    }
    maven {
//        url 'https://global.repo.jmix.io/repository/public'
        url 'https://nexus.jmix.io/repository/public'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.ui:jmix-ui-export-starter'
    implementation 'io.jmix.ui:jmix-ui-widgets-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'com.konghq:unirest-java:3.13.6'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.hsqldb:hsqldb'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    runtimeOnly 'org.postgresql:postgresql'
    implementation "io.jmix.email:jmix-email-ui-starter"
    implementation "io.jmix.email:jmix-email-starter"
    implementation "io.jmix.dynattr:jmix-dynattr-ui-starter"
    implementation "io.jmix.dynattr:jmix-dynattr-starter"
    implementation("io.jmix.translations:jmix-translations-ru")
    implementation("io.jmix.reports:jmix-reports-starter")
    implementation("io.jmix.reports:jmix-reports:1.2.4-softline")
    implementation("io.jmix.reports:jmix-reports-rest-starter")
    implementation("io.jmix.reports:jmix-reports-ui-starter")
    implementation("io.jmix.reports:jmix-reports-ui:1.2.4-softline")
    implementation("io.jmix.security:jmix-security-oauth2-starter")
    implementation("io.jmix.rest:jmix-rest-starter")
    implementation("io.jmix.bpm:jmix-bpm-ui-starter")
    implementation("io.jmix.bpm:jmix-bpm-starter")
    implementation("io.jmix.bpm:jmix-bpm-rest-starter")
    implementation("io.jmix.search:jmix-search-starter")
    implementation("io.jmix.search:jmix-search-ui-starter")
    implementation("io.jmix.notifications:jmix-notifications-ui-starter")
    implementation("io.jmix.notifications:jmix-notifications-starter")
    implementation("io.jmix.emailtemplates:jmix-emailtemplates-starter")
    implementation("io.jmix.emailtemplates:jmix-emailtemplates-ui-starter")
    implementation("io.jmix.audit:jmix-audit-ui-starter")
    implementation("io.jmix.audit:jmix-audit-starter")
    themes("io.jmix.ui:jmix-ui-themes")
    implementation("io.jmix.ui:jmix-ui-themes")
    implementation("com.hazelcast:hazelcast")
    implementation("com.hazelcast:hazelcast-kubernetes:2.2.3")
    implementation("io.jmix.appsettings:jmix-appsettings-starter")
    implementation("io.jmix.appsettings:jmix-appsettings-ui-starter")
    implementation("io.jmix.businesscalendar:jmix-businesscalendar-starter")
    implementation("io.jmix.businesscalendar:jmix-businesscalendar-ui-starter")
    implementation("io.jmix.quartz:jmix-quartz-starter")
    implementation("io.jmix.awsfs:jmix-awsfs-starter")
    implementation("com.softline.jmix:jmix-poib-starter:0.0.1")
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
}

test {
    useJUnitPlatform()
}

bootBuildImage {
    imageName = 'softline/suvv'
}